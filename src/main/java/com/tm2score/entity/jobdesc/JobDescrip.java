package com.tm2score.entity.jobdesc;

import java.io.Serializable;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;


@Entity
@Table( name = "jobdescrip" )
@NamedQueries( {
        @NamedQuery( name = "JobDescrip.findByJobDescripId", query = "SELECT o FROM JobDescrip AS o WHERE o.jobDescripId=:jobDescripId")
        
} )
public class JobDescrip implements Serializable, Comparable<JobDescrip>
{
    @Transient
    private static final long serialVersionUID = 1L;


    @Id
    @GeneratedValue( strategy = GenerationType.IDENTITY )
    @Column( name = "jobdescripid" )
    private int jobDescripId;

    @Column( name = "orgid" )
    private int orgId = 0;

    @Column( name = "suborgid" )
    private int suborgId = 0;

    /*
     0 = active
     99 = archived
    */
    @Column( name = "jobdescripstatustypeid" )
    private int jobDescripStatusTypeId;

    /*
      20 Executive
      15 Upper Level Manager
      10 Middle Management
      5 Supervisor or Team Leader
      0 None
    */
    @Column( name = "jobleadertypeid" )
    private int jobLeaderTypeId;


    @Column( name = "localestr" )
    private String localeStr;

    /*
     Must be unique in account.
    */
    @Column( name = "identifier" )
    private String identifier;

    /*
     Title of the job
    */
    @Column( name = "title" )
    private String title;

    /*
     Text summary of the job. Can be initially generated by AI
    */
    @Column( name = "summary" )
    private String summary;
    
    @Column( name = "plaintext" )
    private String plainText;

    @Override
    public int compareTo(JobDescrip o) 
    {
        if( title!=null && !title.isBlank() && o.getTitle()!=null )
            return title.compareTo(o.getTitle());
        
        return Integer.valueOf(jobDescripId).compareTo(o.getJobDescripId());
    }

    
    
    public int getJobDescripId() {
        return jobDescripId;
    }

    public void setJobDescripId(int jobDescripId) {
        this.jobDescripId = jobDescripId;
    }

    public int getOrgId() {
        return orgId;
    }

    public void setOrgId(int orgId) {
        this.orgId = orgId;
    }

    public int getSuborgId() {
        return suborgId;
    }

    public void setSuborgId(int suborgId) {
        this.suborgId = suborgId;
    }

    public int getJobDescripStatusTypeId() {
        return jobDescripStatusTypeId;
    }

    public void setJobDescripStatusTypeId(int jobDescripStatusTypeId) {
        this.jobDescripStatusTypeId = jobDescripStatusTypeId;
    }

    public int getJobLeaderTypeId() {
        return jobLeaderTypeId;
    }

    public void setJobLeaderTypeId(int jobLeaderTypeId) {
        this.jobLeaderTypeId = jobLeaderTypeId;
    }

    public String getLocaleStr() {
        return localeStr;
    }

    public void setLocaleStr(String localeStr) {
        this.localeStr = localeStr;
    }

    public String getIdentifier() {
        return identifier;
    }

    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getSummary() {
        return summary;
    }

    public void setSummary(String summary) {
        this.summary = summary;
    }

    public String getPlainText() {
        return plainText;
    }

    public void setPlainText(String plainText) {
        this.plainText = plainText;
    }
    
    
    
}
